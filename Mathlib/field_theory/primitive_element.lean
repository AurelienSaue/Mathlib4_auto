/-
Copyright (c) 2020 Thomas Browning and Patrick Lutz. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Thomas Browning and Patrick Lutz
-/
import Mathlib.PrePort
import Mathlib.Lean3Lib.init.default
import Mathlib.field_theory.adjoin
import Mathlib.field_theory.separable
import Mathlib.PostPort

universes u_1 u_2 

namespace Mathlib

/-!
# Primitive Element Theorem

In this file we prove the primitive element theorem.

## Main results

- `exists_primitive_element`: a finite separable extension `E / F` has a primitive element, i.e.
  there is an `α : E` such that `F⟮α⟯ = (⊤ : subalgebra F E)`.

## Implementation notes

In declaration names, `primitive_element` abbreviates `adjoin_simple_eq_top`:
it stands for the statement `F⟮α⟯ = (⊤ : subalgebra F E)`. We did not add an extra
declaration `is_primitive_element F α := F⟮α⟯ = (⊤ : subalgebra F E)` because this
requires more unfolding without much obvious benefit.

## Tags

primitive element, separable field extension, separable extension, intermediate field, adjoin, exists_adjoin_simple_eq_top

-/

namespace field


/-! ### Primitive element theorem for finite fields -/

/-- Primitive element theorem assuming E is finite. -/
theorem exists_primitive_element_of_fintype_top (F : Type u_1) [field F] (E : Type u_2) [field E] [algebra F E] [fintype E] : ∃ (α : E), intermediate_field.adjoin F (intermediate_field.insert.insert ∅ α) = ⊤ := sorry

/-- Primitive element theorem for finite dimensional extension of a finite field. -/
theorem exists_primitive_element_of_fintype_bot (F : Type u_1) [field F] (E : Type u_2) [field E] [algebra F E] [fintype F] [finite_dimensional F E] : ∃ (α : E), intermediate_field.adjoin F (intermediate_field.insert.insert ∅ α) = ⊤ :=
  exists_primitive_element_of_fintype_top F E

/-! ### Primitive element theorem for infinite fields -/

theorem primitive_element_inf_aux_exists_c {F : Type u_1} [field F] [infinite F] {E : Type u_2} [field E] (ϕ : F →+* E) (α : E) (β : E) (f : polynomial F) (g : polynomial F) : ∃ (c : F),
  ∀ (α' : E),
    α' ∈ polynomial.roots (polynomial.map ϕ f) →
      ∀ (β' : E), β' ∈ polynomial.roots (polynomial.map ϕ g) → -(α' - α) / (β' - β) ≠ coe_fn ϕ c := sorry

-- This is the heart of the proof of the primitive element theorem. It shows that if `F` is

-- infinite and `α` and `β` are separable over `F` then `F⟮α, β⟯` is generated by a single element.

theorem primitive_element_inf_aux {F : Type u_1} [field F] [infinite F] {E : Type u_2} [field E] (α : E) (β : E) [algebra F E] (F_sep : is_separable F E) : ∃ (γ : E),
  intermediate_field.adjoin F (intermediate_field.insert.insert (intermediate_field.insert.insert ∅ β) α) =
    intermediate_field.adjoin F (intermediate_field.insert.insert ∅ γ) := sorry

/-- Primitive element theorem: a finite separable field extension `E` of `F` has a
  primitive element, i.e. there is an `α ∈ E` such that `F⟮α⟯ = (⊤ : subalgebra F E)`.-/
theorem exists_primitive_element {F : Type u_1} [field F] {E : Type u_2} [field E] [algebra F E] [finite_dimensional F E] (F_sep : is_separable F E) : ∃ (α : E), intermediate_field.adjoin F (intermediate_field.insert.insert ∅ α) = ⊤ := sorry

