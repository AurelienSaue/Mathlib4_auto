/-
Copyright (c) 2019 Sébastien Gouëzel. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Sébastien Gouëzel
-/
import PrePort
import Lean3Lib.init.default
import Mathlib.analysis.specific_limits
import Mathlib.order.filter.countable_Inter
import Mathlib.topology.G_delta
import PostPort

universes u_1 u_2 

namespace Mathlib

/-!
# Baire theorem

In a complete metric space, a countable intersection of dense open subsets is dense.

The good concept underlying the theorem is that of a Gδ set, i.e., a countable intersection
of open sets. Then Baire theorem can also be formulated as the fact that a countable
intersection of dense Gδ sets is a dense Gδ set. We prove Baire theorem, giving several different
formulations that can be handy. We also prove the important consequence that, if the space is
covered by a countable union of closed sets, then the union of their interiors is dense.

The names of the theorems do not contain the string "Baire", but are instead built from the form of
the statement. "Baire" is however in the docstring of all the theorems, to facilitate grep searches.

We also define the filter `residual α` generated by dense `Gδ` sets and prove that this filter
has the countable intersection property.
-/

/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here when
the source space is ℕ (and subsumed below by `dense_Inter_of_open` working with any
encodable source space). -/
theorem dense_Inter_of_open_nat {α : Type u_1} [emetric_space α] [complete_space α] {f : ℕ → set α} (ho : ∀ (n : ℕ), is_open (f n)) (hd : ∀ (n : ℕ), dense (f n)) : dense (set.Inter fun (n : ℕ) => f n) := sorry

/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with ⋂₀. -/
theorem dense_sInter_of_open {α : Type u_1} [emetric_space α] [complete_space α] {S : set (set α)} (ho : ∀ (s : set α), s ∈ S → is_open s) (hS : set.countable S) (hd : ∀ (s : set α), s ∈ S → dense s) : dense (⋂₀S) := sorry

/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with
an index set which is a countable set in any type. -/
theorem dense_bInter_of_open {α : Type u_1} {β : Type u_2} [emetric_space α] [complete_space α] {S : set β} {f : β → set α} (ho : ∀ (s : β), s ∈ S → is_open (f s)) (hS : set.countable S) (hd : ∀ (s : β), s ∈ S → dense (f s)) : dense (set.Inter fun (s : β) => set.Inter fun (H : s ∈ S) => f s) := sorry

/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with
an index set which is an encodable type. -/
theorem dense_Inter_of_open {α : Type u_1} {β : Type u_2} [emetric_space α] [complete_space α] [encodable β] {f : β → set α} (ho : ∀ (s : β), is_open (f s)) (hd : ∀ (s : β), dense (f s)) : dense (set.Inter fun (s : β) => f s) := sorry

/-- Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with ⋂₀. -/
theorem dense_sInter_of_Gδ {α : Type u_1} [emetric_space α] [complete_space α] {S : set (set α)} (ho : ∀ (s : set α), s ∈ S → is_Gδ s) (hS : set.countable S) (hd : ∀ (s : set α), s ∈ S → dense s) : dense (⋂₀S) := sorry

/-- Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with
an index set which is an encodable type. -/
theorem dense_Inter_of_Gδ {α : Type u_1} {β : Type u_2} [emetric_space α] [complete_space α] [encodable β] {f : β → set α} (ho : ∀ (s : β), is_Gδ (f s)) (hd : ∀ (s : β), dense (f s)) : dense (set.Inter fun (s : β) => f s) := sorry

/-- Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with
an index set which is a countable set in any type. -/
theorem dense_bInter_of_Gδ {α : Type u_1} {β : Type u_2} [emetric_space α] [complete_space α] {S : set β} {f : (x : β) → x ∈ S → set α} (ho : ∀ (s : β) (H : s ∈ S), is_Gδ (f s H)) (hS : set.countable S) (hd : ∀ (s : β) (H : s ∈ S), dense (f s H)) : dense (set.Inter fun (s : β) => set.Inter fun (H : s ∈ S) => f s H) := sorry

/-- Baire theorem: the intersection of two dense Gδ sets is dense. -/
theorem dense.inter_of_Gδ {α : Type u_1} [emetric_space α] [complete_space α] {s : set α} {t : set α} (hs : is_Gδ s) (ht : is_Gδ t) (hsc : dense s) (htc : dense t) : dense (s ∩ t) := sorry

/-- A property holds on a residual (comeagre) set if and only if it holds on some dense `Gδ` set. -/
theorem eventually_residual {α : Type u_1} [emetric_space α] [complete_space α] {p : α → Prop} : filter.eventually (fun (x : α) => p x) (residual α) ↔ ∃ (t : set α), is_Gδ t ∧ dense t ∧ ∀ (x : α), x ∈ t → p x := sorry

/-- A set is residual (comeagre) if and only if it includes a dense `Gδ` set. -/
theorem mem_residual {α : Type u_1} [emetric_space α] [complete_space α] {s : set α} : s ∈ residual α ↔ ∃ (t : set α), ∃ (H : t ⊆ s), is_Gδ t ∧ dense t := sorry

protected instance residual.countable_Inter_filter {α : Type u_1} [emetric_space α] [complete_space α] : countable_Inter_filter (residual α) := sorry

/-- Baire theorem: if countably many closed sets cover the whole space, then their interiors
are dense. Formulated here with an index set which is a countable set in any type. -/
theorem dense_bUnion_interior_of_closed {α : Type u_1} {β : Type u_2} [emetric_space α] [complete_space α] {S : set β} {f : β → set α} (hc : ∀ (s : β), s ∈ S → is_closed (f s)) (hS : set.countable S) (hU : (set.Union fun (s : β) => set.Union fun (H : s ∈ S) => f s) = set.univ) : dense (set.Union fun (s : β) => set.Union fun (H : s ∈ S) => interior (f s)) := sorry

/-- Baire theorem: if countably many closed sets cover the whole space, then their interiors
are dense. Formulated here with `⋃₀`. -/
theorem dense_sUnion_interior_of_closed {α : Type u_1} [emetric_space α] [complete_space α] {S : set (set α)} (hc : ∀ (s : set α), s ∈ S → is_closed s) (hS : set.countable S) (hU : ⋃₀S = set.univ) : dense (set.Union fun (s : set α) => set.Union fun (H : s ∈ S) => interior s) :=
  dense_bUnion_interior_of_closed hc hS (eq.mp (Eq._oldrec (Eq.refl (⋃₀S = set.univ)) set.sUnion_eq_bUnion) hU)

/-- Baire theorem: if countably many closed sets cover the whole space, then their interiors
are dense. Formulated here with an index set which is an encodable type. -/
theorem dense_Union_interior_of_closed {α : Type u_1} {β : Type u_2} [emetric_space α] [complete_space α] [encodable β] {f : β → set α} (hc : ∀ (s : β), is_closed (f s)) (hU : (set.Union fun (s : β) => f s) = set.univ) : dense (set.Union fun (s : β) => interior (f s)) := sorry

/-- One of the most useful consequences of Baire theorem: if a countable union of closed sets
covers the space, then one of the sets has nonempty interior. -/
theorem nonempty_interior_of_Union_of_closed {α : Type u_1} {β : Type u_2} [emetric_space α] [complete_space α] [Nonempty α] [encodable β] {f : β → set α} (hc : ∀ (s : β), is_closed (f s)) (hU : (set.Union fun (s : β) => f s) = set.univ) : ∃ (s : β), set.nonempty (interior (f s)) := sorry

